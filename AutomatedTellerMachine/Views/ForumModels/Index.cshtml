
@using Newtonsoft.Json
@model System.Collections.Generic.IEnumerable<AutomatedTellerMachine.Models.ForumModel>

@{
    ViewBag.Title = "Welcome on Project Aurora's Forum";
}

<h2>@ViewBag.Title</h2>



<script>
    var AppId = '@(ViewBag.AppUserId)';
</script>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User.Email)
            </th>
            <th>
                Modify
            </th>
        </tr>
    </thead>
    <tbody data-bind="foreach:currentTransactions">
        <tr>
            <td>
                <a data-bind="attr: { 'href': '@Url.Action("Index", "CommentModels")/' + Id}">
                    <h5 data-bind="text:Title"></h5>
                </a> 
            </td>
            <td data-bind="text:Question"></td>
            <td data-bind="text:User.Email"></td>
            <td>
                <!-- ko if: ApplicationUserId === AppId -->
                <a data-bind="attr: { 'href': '@Url.Action("Edit", "ForumModels")/' + Id}">Edit</a> |
                <a data-bind="attr: { 'href': '@Url.Action("Delete", "ForumModels")/' + Id}">Delete</a>
                <!-- /ko -->
            </td>
            
        </tr>
    </tbody>
    <tfoot>
        <tr>
            <td colspan="4">
                <span data-bind="click:previousPage,visible:currentPage() > 1" class="glyphicon glyphicon-circle-arrow-left" style="cursor:pointer;"></span>
                <span data-bind="text:currentPage"></span>
                <span data-bind="click:nextPage,visible:currentPage() < lastPage" class="glyphicon glyphicon-circle-arrow-right" style="cursor:pointer;"></span>
            </td>
        </tr>
    </tfoot>
</table>

<script src="~/Scripts/knockout-3.3.0.js"></script>
<script>
    function StatementViewModel() {
        var self = this;

        // properties
        self.transactions = @Html.Raw(JsonConvert.SerializeObject(Model, new JsonSerializerSettings{ReferenceLoopHandling = ReferenceLoopHandling.Ignore}));
        self.pageSize = 4;
        self.lastPage = Math.ceil(self.transactions.length / self.pageSize);
        self.currentPage = ko.observable(1);
        self.currentTransactions = ko.computed(function(){
            var startIndex = (self.currentPage() - 1) * self.pageSize;
            var endIndex = startIndex + self.pageSize;
            self.transactions.sort(function(left, right) 
            { return left.Title === right.Title ? 0 : (left.Title < right.Title ? -1 : 1) }
            );

            return self.transactions.slice(startIndex, endIndex);
        });

        // methods
        self.nextPage = function(){
            self.currentPage(self.currentPage() + 1);
        };
        self.previousPage = function(){
            self.currentPage(self.currentPage() - 1);
        };
    };

    ko.applyBindings(new StatementViewModel());
</script>






@if (User.Identity.IsAuthenticated)
{
    <a href='@Url.Action("Create", "ForumModels")' class="glyphicon glyphicon-plus"title="Create new Forum entry"></a>
}
   